// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-docker-compose
{
	"name": "splatoon schedule alexa skill",

	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"build": {
		"dockerfile": "./Dockerfile",
		"context": ".."
	},
	"overrideCommand": true,
	"service": "vscode",

	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=delegated",

	"containerEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
		"WORKSPACE_FOLDER": "${workspaceFolder}"
	},

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/audacioustux/devcontainers/aws-sam-cli:1": {},
		"ghcr.io/jungaretti/features/make:1": {},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"dockerDashComposeVersion": "none",
			"installDockerBuildx": false
		},
		"ghcr.io/devcontainers/features/common-utils:2": {
			"upgradePackages": "true"
		},
		"ghcr.io/devcontainers/features/aws-cli:1": {}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],

	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "stopCompose",

	// Uncomment the next line to run commands after the container is created.
	"postAttachCommand": ".devcontainer/postCommand.sh",

	// Uncomment to connect as an existing user other than the container default. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root",

	"mounts": [
		// "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=delegated",
		{
			"source": "/var/run/docker.sock",
			"target": "/var/run/docker.sock",
			"type": "bind"
		}
	],
	
	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"extensions": [
				"golang.go",
				"eamodio.gitlens", // IDE Git information
				"davidanson.vscode-markdownlint",
				"ms-azuretools.vscode-docker", // Docker integration and linting
				"Gruntfuggly.todo-tree", // Highlights TODO comments
				"vscode-icons-team.vscode-icons", // Better file extension icons
				"IBM.output-colorizer" // Colorize your output/test logs
			]
		},
		"settings": {
			"files.eol": "\n",
			"editor.formatOnSave": true,
			"go.buildTags": "",
			"go.toolsEnvVars": {
				"CGO_ENABLED": "0"
			},
			"go.useLanguageServer": true,
			"go.testEnvVars": {
				"CGO_ENABLED": "1"
			},
			"go.testFlags": [
				"-v",
				"-race"
			],
			"go.testTimeout": "10s",
			"go.coverOnSingleTest": true,
			"go.coverOnSingleTestFile": true,
			"go.coverOnTestPackage": true,
			"go.lintTool": "golangci-lint",
			"go.lintOnSave": "package",
			"[go]": {
				"editor.codeActionsOnSave": {
					"source.organizeImports": "always"
				}
			},
			"gopls": {
				"usePlaceholders": false,
				"staticcheck": true,
				"formatting.gofumpt": true
			},
			"remote.extensionKind": {
				"ms-azuretools.vscode-docker": "workspace"
			}
		}
	}

}
